/* ============================================================================
   @UTILITIES -> FLEX EMBED
   ========================================================================= */


/**
 * For use with media embeds – such as videos, slideshows, or even images –
 * that need to retain a specific aspect ratio but adapt to the width of their
 * containing element.
 *
 * @markup
   <div class="u-flex-embed">
     <!-- The content e.g. a video (`iframe`) -->
     <div class="u-flex-embed__content"> ... </div>
     <!-- Empty element to maintain aspect ratio -->
     <div class="u-flex-embed__ratio u-flex-embed__ratio--16-by-9"></div>
   </div>
 *
 * @credit
 * https://github.com/suitcss/components-flex-embed/blob/master/lib/flex-embed.css
 */


/**
 * Settings.
 */

/**
 * Toggle on/off certain styles and treatments.
 */

// Apply at these breakpoints
$u-flex-embed-apply-at-breakpoints:                      $default-breakpoints !default;

// From the above choose what you want to apply it too
$u-flex-embed-apply-at-breakpoints-for-default:          false !default;

$u-flex-embed-apply-at-breakpoints-for-ratio:            false !default;

$u-flex-embed-apply-at-breakpoints-for-ratio-16-by-9:    false !default;

$u-flex-embed-apply-at-breakpoints-for-ratio-3-by-1:     false !default;

$u-flex-embed-apply-at-breakpoints-for-ratio-2-by-1:     false !default;

$u-flex-embed-apply-at-breakpoints-for-ratio-4-by-3:     false !default;

$u-flex-embed-apply-at-breakpoints-for-content:          false !default;


%u-flex-embed,
.u-flex-embed {
  display: block;
  position: relative;
  overflow: hidden;
}

@if $u-flex-embed-apply-at-breakpoints-for-default {
  @include generate-at-breakpoints('.u-flex-embed', $u-flex-embed-apply-at-breakpoints) {
    display: block;
    position: relative;
    overflow: hidden;
  }
}// end if


  /**
   * The aspect-ratio hack is applied to an empty element because it allows
   * the component to respect `max-height`.
   *
   * N.B. default aspect ratio is 1:1.
   */

  %u-flex-embed__ratio,
  .u-flex-embed__ratio {
    display: block;
    padding-bottom: 100%;
    width: 100%;
  }

  @if $u-flex-embed-apply-at-breakpoints-for-ratio {
    @include generate-at-breakpoints('.u-flex-embed__ratio',
      $u-flex-embed-apply-at-breakpoints) {
      display: block;
      padding-bottom: 100%;
      width: 100%;
    }
  }// end if


  /**
   * Modifiers: common aspect ratios.
   */

  // 16:9 aspect ratio
  %u-flex-embed__ratio--16-by-9,
  .u-flex-embed__ratio--16-by-9 {padding-bottom: 56.25%;}

  @if $u-flex-embed-apply-at-breakpoints-for-ratio-16-by-9 {
    @include generate-at-breakpoints('.u-flex-embed__ratio--16-by-9',
      $u-flex-embed-apply-at-breakpoints) {padding-bottom: 56.25%;}
  }// end if

  // 3:1 aspect ratio
  %u-flex-embed__ratio--3-by-1,
  .u-flex-embed__ratio--3-by-1 {padding-bottom: (100/3)*1%;}

  @if $u-flex-embed-apply-at-breakpoints-for-ratio-3-by-1 {
    @include generate-at-breakpoints('.u-flex-embed__ratio--3-by-1',
      $u-flex-embed-apply-at-breakpoints) {padding-bottom: (100/3)*1%;}
  }// end if

  // 2:1 aspect ratio
  %u-flex-embed__ratio--2-by-1,
  .u-flex-embed__ratio--2-by-1 {padding-bottom: 50%;}

  @if $u-flex-embed-apply-at-breakpoints-for-ratio-2-by-1 {
    @include generate-at-breakpoints('.u-flex-embed__ratio--2-by-1',
      $u-flex-embed-apply-at-breakpoints) {padding-bottom: 50%;}
  }// end if

  // 4:3 aspect ratio
  %u-flex-embed__ratio--4-by-3,
  .u-flex-embed__ratio--4-by-3 {padding-bottom: 75%;}

  @if $u-flex-embed-apply-at-breakpoints-for-ratio-4-by-3 {
    @include generate-at-breakpoints('.u-flex-embed__ratio--4-by-3',
      $u-flex-embed-apply-at-breakpoints) {padding-bottom: 75%;}
  }// end if


  /**
   * The content e.g. a video (`iframe`).
   */

  %u-flex-embed__content,
	.u-flex-embed__content {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}

  @if $u-flex-embed-apply-at-breakpoints-for-content {
    @include generate-at-breakpoints('.u-flex-embed__content',
      $u-flex-embed-apply-at-breakpoints) {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }// end if