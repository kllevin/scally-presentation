/**
 * Scally theme for reveal.js.
 *
 * Copyright (C) 2015 Hakim El Hattab, http://hakim.se
 */
/**
 *
 */
/**
 * Settings.
 */
/*********************************************
 * GLOBAL STYLES
 *********************************************/
body {
  background: white;
  background-color: white; }

.reveal {
  font-family: Ubuntu, Helvetica, sans-serif;
  font-size: 30px;
  font-weight: normal;
  color: #222; }

::selection {
  color: #fff;
  background: #e28b98;
  text-shadow: none; }

.reveal .slides > section, .reveal .slides > section > section {
  line-height: 1.3;
  font-weight: inherit; }

/*********************************************
 * HEADERS
 *********************************************/
.reveal h1, .reveal h2, .reveal h3, .reveal h4, .reveal h5, .reveal h6 {
  margin: 0 0 20px 0;
  color: #222;
  font-family: Ubuntu, Helvetica, sans-serif;
  font-weight: 100;
  line-height: 1.2;
  letter-spacing: normal;
  text-transform: none;
  text-shadow: none;
  word-wrap: break-word; }

.reveal h1 {
  font-size: 2em; }

.reveal h2 {
  font-size: 1.5em; }

.reveal h3 {
  font-size: 1em; }

.reveal h4 {
  font-size: 1em; }

.reveal h1 {
  text-shadow: none; }

/*********************************************
 * OTHER
 *********************************************/
.reveal p {
  margin: 20px 0;
  line-height: 1.3; }

/* Ensure certain elements are never larger than the slide itself */
.reveal img, .reveal video, .reveal iframe {
  max-width: 95%;
  max-height: 95%; }

.reveal strong, .reveal b {
  font-weight: bold; }

.reveal em {
  font-style: italic; }

.reveal ol, .reveal dl, .reveal ul {
  display: inline-block;
  text-align: left;
  margin: 0 0 0 1em; }

.reveal ol {
  list-style-type: decimal; }

.reveal ul {
  list-style-type: disc; }

.reveal ul ul {
  list-style-type: square; }

.reveal ul ul ul {
  list-style-type: circle; }

.reveal ul ul, .reveal ul ol, .reveal ol ol, .reveal ol ul {
  display: block;
  margin-left: 40px; }

.reveal dt {
  font-weight: bold; }

.reveal dd {
  margin-left: 40px; }

.reveal q, .reveal blockquote {
  quotes: none; }

/*
.reveal blockquote {
	display: block;
	position: relative;
	width: 70%;
	margin: $blockMargin auto;
	padding: 5px;

	font-style: italic;
	background: rgba(255, 255, 255, 0.05);
	box-shadow: 0px 0px 2px rgba(0,0,0,0.2);
}
	.reveal blockquote p:first-child,
	.reveal blockquote p:last-child {
		display: inline-block;
	}

.reveal q {
	font-style: italic;
}
*/
/*.reveal pre {
	display: block;
	position: relative;
	width: 90%;
	margin: $blockMargin auto;

	text-align: left;
	font-size: 0.55em;
	font-family: monospace;
	line-height: 1.2em;

	word-wrap: break-word;

	box-shadow: 0px 0px 6px rgba(0,0,0,0.3);
}
.reveal code {
	font-family: monospace;
}

.reveal pre code {
	display: block;
	padding: 5px;
	overflow: auto;
	max-height: 400px;
	word-wrap: normal;
	background: #3F3F3F;
	color: #DCDCDC;
}*/
.reveal table {
  margin: auto;
  border-collapse: collapse;
  border-spacing: 0; }

.reveal table th {
  font-weight: bold; }

.reveal table th, .reveal table td {
  text-align: left;
  padding: 0.2em 0.5em 0.2em 0.5em;
  border-bottom: 1px solid; }

.reveal table tr:last-child td {
  border-bottom: none; }

.reveal sup {
  vertical-align: super; }

.reveal sub {
  vertical-align: sub; }

.reveal small {
  display: inline-block;
  font-size: 0.6em;
  line-height: 1.2em;
  vertical-align: top; }

.reveal small * {
  vertical-align: top; }

/*********************************************
 * LINKS
 *********************************************/
.reveal a {
  color: #bf2f44;
  text-decoration: none;
  -webkit-transition: color 0.15s ease;
  -moz-transition: color 0.15s ease;
  transition: color 0.15s ease; }

.reveal a:hover {
  color: #962536;
  text-shadow: none;
  border: none; }

.reveal .roll span:after {
  color: #fff;
  background: #82202f; }

/*********************************************
 * IMAGES
 *********************************************/
.reveal section img {
  margin: 15px 0px;
  background: rgba(255, 255, 255, 0.12);
  border: 4px solid #222;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.15); }

.reveal a img {
  -webkit-transition: all 0.15s linear;
  -moz-transition: all 0.15s linear;
  transition: all 0.15s linear; }

.reveal a:hover img {
  background: rgba(255, 255, 255, 0.2);
  border-color: #bf2f44;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.55); }

/*********************************************
 * NAVIGATION CONTROLS
 *********************************************/
.reveal .controls div.navigate-left, .reveal .controls div.navigate-left.enabled {
  border-right-color: #bf2f44; }

.reveal .controls div.navigate-right, .reveal .controls div.navigate-right.enabled {
  border-left-color: #bf2f44; }

.reveal .controls div.navigate-up, .reveal .controls div.navigate-up.enabled {
  border-bottom-color: #bf2f44; }

.reveal .controls div.navigate-down, .reveal .controls div.navigate-down.enabled {
  border-top-color: #bf2f44; }

.reveal .controls div.navigate-left.enabled:hover {
  border-right-color: #962536; }

.reveal .controls div.navigate-right.enabled:hover {
  border-left-color: #962536; }

.reveal .controls div.navigate-up.enabled:hover {
  border-bottom-color: #962536; }

.reveal .controls div.navigate-down.enabled:hover {
  border-top-color: #962536; }

/*********************************************
 * PROGRESS BAR
 *********************************************/
.reveal .progress {
  background: rgba(0, 0, 0, 0.2); }

.reveal .progress span {
  background: #bf2f44;
  -webkit-transition: width 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985);
  -moz-transition: width 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985);
  transition: width 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985); }

/*********************************************
 * SLIDE NUMBER
 *********************************************/
.reveal .slide-number {
  color: #bf2f44; }

/**
 * Resets and overrides from `template/theme.scss`.
 */
.reveal {
  font-weight: 300;
  /**
   * Set line heights.
   */
  /**
   * Links.
   */
  /**
   * Headings.
   */
  /**
   * Paragraphs.
   */
  /**
   * Code.
   */
  /**
   * Images.
   */
  /**
   * Iframes.
   */
  /**
   * Blockquotes.
   */
  /**
   * Lists.
   */
  /**
   * Misc.
   */
  /**
   * Controls.
   */
  /**
   * Progress bar.
   */
  /**
   * Backgrounds.
   */
  /**
     * Demo blocks.
     */ }
  .reveal p, .reveal ul, .reveal ol, .reveal blockquote {
    line-height: 1.45; }
  .reveal a:hover, .reveal a:focus {
    text-decoration: none; }
  .reveal h2 {
    margin-bottom: 50px; }
  .reveal h3 {
    font-weight: 700; }
  .reveal p {
    margin: 40px 0; }
  .reveal pre[class*="language-"] {
    padding: 20px !important;
    max-height: 400px;
    margin-bottom: 40px !important;
    border: 0 !important;
    box-shadow: none !important; }
    .reveal pre[class*="language-"]:last-child {
      margin-bottom: 0 !important; }
    .reveal pre[class*="language-"] code[class*="language-"] {
      display: block !important; }
  .reveal code {
    font-size: 0.7em !important; }
  .reveal .code-large {
    padding: 10px;
    font-size: 1em !important; }
  .reveal section img {
    margin: 0;
    background: none;
    border: 0;
    box-shadow: none; }
  .reveal a:hover img, .reveal a:focus img {
    background: none;
    box-shadow: none; }
  .reveal iframe {
    margin-left: auto !important;
    margin-right: auto !important; }
  .reveal blockquote {
    color: #666;
    font-style: italic;
    font-weight: 100;
    text-align: left;
    margin-bottom: 20px;
    border-left: 2px solid #bf2f44;
    padding: 5px 0 5px 20px; }
    iframe .reveal blockquote {
      border: 0 !important;
      margin-bottom: 0 !important;
      padding: 0 !important; }
  .reveal cite {
    display: block;
    text-align: left; }
    .reveal cite:before {
      content: "\2014"; }
  .reveal ol, .reveal dl, .reveal ul {
    display: block;
    margin-left: 0; }
  .reveal strong, .reveal b {
    font-weight: 700; }
  .reveal em {
    font-style: italic; }
  .reveal .controls div {
    opacity: 0.3 !important; }
  .reveal .controls div.enabled {
    opacity: 1 !important; }
  .reveal .controls div.navigate-left, .reveal .controls div.navigate-left.enabled {
    border-right-color: #333; }
  .reveal .controls div.navigate-left.enabled:hover, .reveal .controls div.navigate-left.enabled:focus {
    border-right-color: #4d4d4d; }
  .reveal .controls div.navigate-right, .reveal .controls div.navigate-right.enabled {
    border-left-color: #333; }
  .reveal .controls div.navigate-right.enabled:hover, .reveal .controls div.navigate-right.enabled:focus {
    border-left-color: #4d4d4d; }
  .reveal .controls div.navigate-down, .reveal .controls div.navigate-down.enabled {
    border-top-color: #333; }
  .reveal .controls div.navigate-down.enabled:hover, .reveal .controls div.navigate-down.enabled:focus {
    border-top-color: #4d4d4d; }
  .reveal .controls div.navigate-up, .reveal .controls div.navigate-up.enabled {
    border-bottom-color: #333; }
  .reveal .controls div.navigate-up.enabled:hover, .reveal .controls div.navigate-up.enabled:focus {
    border-bottom-color: #4d4d4d; }
  .reveal .progress {
    height: 8px;
    background-image: linear-gradient(-90deg, #f9ac0a 0%, #fd536f 50%, #bf2f44 100%); }
    .reveal .progress span {
      background: white; }
  .reveal .tropical-gradient *, .reveal .tropical-gradient a:hover, .reveal .tropical-gradient a:focus {
    color: white; }
  .reveal .tropical-gradient a {
    transition: opacity 0.2s; }
  .reveal .tropical-gradient a:hover, .reveal .tropical-gradient a:focus {
    opacity: 0.7; }
  .reveal .demo-block {
    border: 1px solid #bf2f44; }
  .reveal .demo-block-bg {
    background: #eee; }

/**
 * Backgrounds.
 */
.backgrounds .tropical-gradient {
  background: linear-gradient(-90deg, #f9ac0a 0%, #fd536f 50%, #bf2f44 100%); }
.backgrounds .black-bg {
  background-color: #000; }

/**
 * Utilities.
 */
.u-text-size-small {
  font-size: 0.75em !important; }

.u-text-size-large {
  font-size: 1.3em !important; }

.u-text-align-center {
  text-align: center !important; }

.u-text-align-left {
  text-align: left !important; }

.u-text-align-right {
  text-align: right !important; }

.u-s-m-none {
  margin: 0 !important; }

.u-s-mb-none {
  margin-bottom: 0 !important; }

.u-s-mt-none {
  margin-top: 0 !important; }

.u-s-mb-20 {
  margin-bottom: 20px !important; }

.u-s-mb-40 {
  margin-bottom: 40px !important; }

.u-s-mb-100 {
  margin-bottom: 100px !important; }

.u-list-plain {
  margin: 0 !important;
  list-style: none !important; }

.u-list-padding > li {
  margin-bottom: 5px !important; }

.u-text-mono {
  font-family: Consolas, Monaco, 'Andale Mono', monospace !important;
  font-size: 0.75em !important;
  color: #666; }
  .u-text-mono code {
    font-size: 100% !important; }

.u-narrow-container {
  max-width: 900px !important;
  margin-left: auto !important;
  margin-right: auto !important; }

.reveal .l-container {
  width: 92%;
  min-width: 13.75rem;
  max-width: 100rem;
  margin: 0 auto; }

@media print {
  .l-container {
    width: auto; } }

/**
 * Modifier: full bleed.
 */
.reveal .l-container--full-bleed {
  width: auto;
  max-width: none; }

/**
 * Modifier: not centered.
 */
.reveal .l-container--not-centered {
  margin-left: 0;
  margin-right: 0; }

.reveal .l-grid {
  margin-left: -1.5rem;
  display: block;
  font-size: 0; }

.reveal .l-grid__item {
  display: inline-block;
  padding-left: 1.5rem;
  width: 100%;
  vertical-align: top;
  font-size: 30px;
  line-height: 1.5; }

/**
 * Modifier: gutterless.
 */
.reveal .l-grid--gutterless {
  margin-left: 0; }

.reveal .l-grid--gutterless > .l-grid__item {
  padding-left: 0; }

/**
 * Modifier: gutter tiny.
 */
.reveal .l-grid--gutter-tiny {
  margin-left: -0.5rem; }

.reveal .l-grid--gutter-tiny > .l-grid__item {
  padding-left: 0.5rem; }

/**
 * Modifier: gutter small.
 */
.reveal .l-grid--gutter-small {
  margin-left: -0.75rem; }

.reveal .l-grid--gutter-small > .l-grid__item {
  padding-left: 0.75rem; }

/**
 * Modifier: gutter large.
 */
.reveal .l-grid--gutter-large {
  margin-left: -2.25rem; }

.reveal .l-grid--gutter-large > .l-grid__item {
  padding-left: 2.25rem; }

/**
 * Modifier: gutter huge.
 */
.reveal .l-grid--gutter-huge {
  margin-left: -3rem; }

.reveal .l-grid--gutter-huge > .l-grid__item {
  padding-left: 3rem; }

/**
 * Modifier: reversed.
 *
 * Reversed rendered order of layout items, e.g. items 1, 2, 3, 4 in your
 * markup will display in order 4, 3, 2, 1 on your page.
 */
.reveal .l-grid--reversed {
  direction: rtl;
  text-align: left; }

.reveal .l-grid--reversed > .l-grid__item {
  direction: ltr;
  text-align: left; }

/**
 * Modifier: vertical align middle.
 */
.reveal .l-grid--align-middle > .l-grid__item {
  vertical-align: middle; }

/**
 * Modifier: vertical align bottom.
 */
.reveal .l-grid--align-bottom > .l-grid__item {
  vertical-align: bottom; }

/**
 * Modifier: align right.
 */
.reveal .l-grid--align-right {
  text-align: right; }

.reveal .l-grid--align-right > .l-grid__item {
  text-align: left; }

/**
 * Modifier: align center.
 */
.reveal .l-grid--align-center {
  text-align: center; }

.reveal .l-grid--align-center > .l-grid__item {
  text-align: left; }

/**
 * Modifier: shrink wrap.
 *
 * Make it be the width of it's content.
 */
.reveal .l-grid--shrink-wrap > .l-grid__item {
  width: auto; }

/* ============================================================================
   @LAYOUT -> SIDE-BY-SIDE
   ========================================================================= */
/**
 * Place any two elements side-by-side, typically for an image- and text-like
 * content.
 *
 * @markup
   <div class="l-side-by-side">
     <div class="l-side-by-side__left"> ... </div>
     <div class="l-side-by-side__right"> ... </div>
   </div>
 *
 * @credit
 * http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 */
/**
 * Settings.
 */
/**
 * 1. So it can work on inline elements e.g. `span`.
 */
.reveal .l-side-by-side {
  display: block; }

.l-side-by-side:after {
  content: "";
  display: table;
  clear: both; }

/**
 * Left side.
 */
.reveal .l-side-by-side__left {
  float: left;
  margin-right: 1.5rem;
  /**
   * Modifiers: gutter sizing.
   */
  /**
   * Modifiers: reversed.
   *
   * Switch the sides i.e. left becomes right and right becomes left.
   */
  /**
   * Modifier: flush.
   *
   * Remove the gutter.
   */
  /**
   * Modifier: remove.
   *
   * Turn off the side-by-side layout so the two elements stack on top of
   * each other at the palm breakpoint (or whatever you specify) and provide
   * bottom spacing between the two elements via the gutter size settings.
   *
   * Make optional as this uses a fair amount of CSS.
   *
   * N.B. we use a `max-width` media query for this which is something we
   * wouldn't usually do as we build Mobile First however this is simply the
   * most pragmatic way of accomplishing this. Also this layout module's
   * default state is side-by-side, so its stacked state is the exception,
   * rather than the rule.
   */ }

.l-side-by-side--gutter-tiny > .l-side-by-side__left {
  margin-right: 0.5rem; }

.l-side-by-side--gutter-small > .l-side-by-side__left {
  margin-right: 0.75rem; }

.l-side-by-side--gutter-large > .l-side-by-side__left {
  margin-right: 2.25rem; }

.l-side-by-side--gutter-huge > .l-side-by-side__left {
  margin-right: 3rem; }

.l-side-by-side--reversed > .l-side-by-side__left {
  float: right;
  margin-right: 0;
  margin-left: 1.5rem; }

.l-side-by-side--reversed.l-side-by-side--gutter-tiny > .l-side-by-side__left {
  margin-left: 0.5rem; }

.l-side-by-side--reversed.l-side-by-side--gutter-small > .l-side-by-side__left {
  margin-left: 0.75rem; }

.l-side-by-side--reversed.l-side-by-side--gutter-large > .l-side-by-side__left {
  margin-left: 2.25rem; }

.l-side-by-side--reversed.l-side-by-side--gutter-huge > .l-side-by-side__left {
  margin-left: 3rem; }

.l-side-by-side--flush > .l-side-by-side__left {
  margin-right: 0; }

.l-side-by-side--reversed.l-side-by-side--flush > .l-side-by-side__left {
  margin-left: 0; }

@media (max-width: 40em) {
  .l-side-by-side--remove > .l-side-by-side__left {
    float: none;
    margin-right: 0;
    margin-left: 0;
    margin-bottom: 1.5rem; }
  .l-side-by-side--remove.l-side-by-side--gutter-tiny > .l-side-by-side__left {
    margin-bottom: 0.5rem; }
  .l-side-by-side--remove.l-side-by-side--gutter-small > .l-side-by-side__left {
    margin-bottom: 0.75rem; }
  .l-side-by-side--remove.l-side-by-side--gutter-large > .l-side-by-side__left {
    margin-bottom: 2.25rem; }
  .l-side-by-side--remove.l-side-by-side--gutter-huge > .l-side-by-side__left {
    margin-bottom: 3rem; }
  .l-side-by-side--remove.l-side-by-side--flush > .l-side-by-side__left {
    margin-bottom: 0; } }

/**
 * Right side.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 */
.reveal .l-side-by-side__right {
  display: table-cell;
  width: 10000px; }

/* ============================================================================
   @LAYOUT -> SIDE-BY-SIDE ALTERNATE VERSION
   ========================================================================= */
/**
 * This is the same as the default Side-by-side layout module however it
 * utilises `display: table[-cell];` to give us control over vertical
 * alignment.
 *
 * @markup
   <div class="l-side-by-side-alt">
     <div class="l-side-by-side-alt__left"> ... </div>
     <div class="l-side-by-side-alt__right"> ... </div>
   </div>
 *
 * @credit
 * https://github.com/inuitcss/objects.flag/blob/master/_objects.flag.scss
 */
/**
 * Settings.
 */
/**
 * 1. Allows us to control vertical alignments.
 * 2. Force to be the full width of its parent. Combined with [1], this makes
 *    the layout module behave in a quasi-`display: block;` manner.
 */
.reveal .l-side-by-side-alt {
  display: table;
  width: 100%; }

/**
 * Modifier: reversed.
 *
 * 1. Swap the rendered direction of the object.
 */
.reveal .l-side-by-side-alt--reversed {
  direction: rtl; }

/**
 * Modifier: shrink-wrap.
 *
 * Make it be the width of it's content not it's parent as per the default.
 */
.reveal .l-side-by-side-alt--shrink-wrap {
  width: auto; }

/**
 * Modifier: make linear.
 *
 * Turn off the side-by-side layout so the two elements stack on top of
 * each other at the palm breakpoint (or whatever you specify) and provide
 * bottom spacing between the two elements via the gutter size settings.
 *
 * Make optional as this uses a fair amount of CSS.
 *
 * N.B. we use a `max-width` media query for this which is something we
 * wouldn't usually do as we build Mobile First however this is simply the
 * most pragmatic way of accomplishing this. Also this layout module's default
 * state is side-by-side, so its stacked state is the exception, rather
 * than the rule.
 *
 * 1. Disable reversal of content because there is no concept of 'reversed' in
 *    a stacked layout.
 */
@media (max-width: 40em) {
  .reveal .l-side-by-side-alt--remove {
    direction: ltr; } }

/**
 * The two sides of the layout module. There should only ever be one of each.
 *
 * 1. Default to aligning content to their middles.
 */
.reveal .l-side-by-side-alt__left, .reveal .l-side-by-side-alt__right {
  display: table-cell;
  vertical-align: middle;
  /**
   * Modifier: reversed.
   *
   * Switch the sides i.e. left becomes right and right becomes left.
   *
   * 1. Reset the rendered direction of the layout module.
   */
  /**
   * Modifiers: vertical alignments.
   */
  /**
   * Modifier: make linear.
   */ }

.reveal .l-side-by-side-alt--reversed > .l-side-by-side-alt__left, .l-side-by-side-alt--reversed > .reveal .l-side-by-side-alt__right {
  direction: ltr; }

.reveal .l-side-by-side-alt--top > .l-side-by-side-alt__left, .l-side-by-side-alt--top > .reveal .l-side-by-side-alt__right {
  vertical-align: top; }

.reveal .l-side-by-side-alt--bottom > .l-side-by-side-alt__left, .l-side-by-side-alt--bottom > .reveal .l-side-by-side-alt__right {
  vertical-align: bottom; }

@media (max-width: 40em) {
  .reveal .l-side-by-side-alt--remove > .l-side-by-side-alt__left, .l-side-by-side-alt--remove > .reveal .l-side-by-side-alt__right {
    display: block; } }

/**
 * Left side.
 */
.reveal .l-side-by-side-alt__left {
  padding-right: 1.5rem;
  /**
   * Modifiers: gutter sizing.
   */
  /**
   * Modifiers: reversed.
   *
   * 1. Reassign paddings to the correct sides.
   */
  /**
   * Modifier: flush.
   *
   * Remove the gutter.
   */
  /**
   * Modifier: make linear.
   */
  /**
   * Need to turn off responsive images otherwise it breaks.
   */ }

.reveal .l-side-by-side-alt--gutter-tiny > .l-side-by-side-alt__left {
  padding-right: 0.5rem; }

.reveal .l-side-by-side-alt--gutter-small > .l-side-by-side-alt__left {
  padding-right: 0.75rem; }

.reveal .l-side-by-side-alt--gutter-large > .l-side-by-side-alt__left {
  padding-right: 2.25rem; }

.reveal .l-side-by-side-alt--gutter-huge > .l-side-by-side-alt__left {
  padding-right: 3rem; }

.reveal .l-side-by-side-alt--reversed > .l-side-by-side-alt__left {
  padding-right: 0;
  padding-left: 1.5rem; }

.reveal .l-side-by-side-alt--reversed.l-side-by-side-alt--gutter-tiny > .l-side-by-side-alt__left {
  padding-left: 0.5rem; }

.reveal .l-side-by-side-alt--reversed.l-side-by-side-alt--gutter-small > .l-side-by-side-alt__left {
  padding-left: 0.75rem; }

.reveal .l-side-by-side-alt--reversed.l-side-by-side-alt--gutter-large > .l-side-by-side-alt__left {
  padding-left: 2.25rem; }

.reveal .l-side-by-side-alt--reversed.l-side-by-side-alt--gutter-huge > .l-side-by-side-alt__left {
  padding-left: 3rem; }

.reveal .l-side-by-side-alt--flush > .l-side-by-side-alt__left {
  padding-right: 0; }

.reveal .l-side-by-side-alt--reversed.l-side-by-side-alt--flush > .l-side-by-side-alt__left {
  padding-left: 0; }

@media (max-width: 40em) {
  .reveal .l-side-by-side-alt--remove > .l-side-by-side-alt__left {
    padding-right: 0;
    padding-left: 0;
    margin-bottom: 1.5rem; }
  .reveal .l-side-by-side-alt--remove.l-side-by-side-alt--gutter-tiny > .l-side-by-side-alt__left {
    margin-bottom: 0.5rem; }
  .reveal .l-side-by-side-alt--remove.l-side-by-side-alt--gutter-small > .l-side-by-side-alt__left {
    margin-bottom: 0.75rem; }
  .reveal .l-side-by-side-alt--remove.l-side-by-side-alt--gutter-large > .l-side-by-side-alt__left {
    margin-bottom: 2.25rem; }
  .reveal .l-side-by-side-alt--remove.l-side-by-side-alt--gutter-huge > .l-side-by-side-alt__left {
    margin-bottom: 3rem; }
  .reveal .l-side-by-side-alt--remove.l-side-by-side-alt--flush > .l-side-by-side-alt__left {
    margin-bottom: 0; } }

.reveal .l-side-by-side-alt__left > img {
  max-width: none;
  /**
     * Modifier: remove.
     *
     * Bring back responsive images for stacked version.
     */ }

@media (max-width: 40em) {
  .reveal .l-side-by-side-alt__left > img {
    max-width: 100%; } }

/* ============================================================================
   @UTILITIES -> WIDTHS
   ========================================================================= */
/**
 * Apply different width treatments to elements. They're two different types of
 * treatments you can apply:
 *
 * - Intrinsic widths
 * - Percentage widths
 */
/**
 * Settings.
 */
/**
 * Toggle on/off certain styles and treatments.
 */
/**
 * Intrinsic widths.
 */
/**
 * Make an element shrink wrap its content.
 */
.reveal .u-width-shrink-wrap {
  display: block;
  float: left;
  width: auto; }

.reveal .u-width-shrink-wrap--right {
  float: right; }

/**
 * Make an element fill the remaining space.
 *
 * N.B. for the alternative method do not use if child elements might be wider
 * than the remaining space because in Chrome, Safari, and Firefox it results
 * in undesired layout.
 */
.reveal .u-width-fill-remaining-space {
  display: block;
  overflow: hidden;
  width: auto; }

.reveal .u-width-fill-remaining-space-alt {
  display: table-cell;
  max-width: 100%;
  width: 10000px; }

/**
 * Make an element the width of its parent.
 */
.reveal .u-width-full-bleed {
  display: block;
  width: 100%; }

/**
 * Percentage based width classes generated by the `generate-percentage-classes
 * -at-breakpoints` mixin found here: Core -> Settings -> Mixins. Each class
 * get's its value and is named after the Sass settings defined here: Core ->
 * Settings -> Widths with the addition of the utility namespace: `u-`, e.g.
 * `$one-half` = `.u-one-half`.
 *
 * All the width classes can be applied at different breakpoints with the
 * format being:
 *
 * Using a `min-width` media query (default):
 *
   .u-[setting-name]-from-[breakpoint]
 *
 * E.g.
 *
   .u-one-half-from-lap
 *
 * Using a `max-width` media query:
 *
   .u-[setting-name]-up-to-[breakpoint]
 *
 * E.g.
 *
   .u-one-third-up-to-desk
 */
.reveal .u-one-whole {
  width: 100%; }

.reveal .u-one-half {
  width: 50%; }

.reveal .u-one-third {
  width: 33.33333%; }

.reveal .u-two-thirds {
  width: 66.66667%; }

.reveal .u-one-quarter {
  width: 25%; }

.reveal .u-two-quarters {
  width: 50%; }

.reveal .u-three-quarters {
  width: 75%; }

.reveal .u-one-fifth {
  width: 20%; }

.reveal .u-two-fifths {
  width: 40%; }

.reveal .u-three-fifths {
  width: 60%; }

.reveal .u-four-fifths {
  width: 80%; }

.reveal .u-one-sixth {
  width: 16.66667%; }

.reveal .u-two-sixths {
  width: 33.33333%; }

.reveal .u-three-sixths {
  width: 50%; }

.reveal .u-four-sixths {
  width: 66.66667%; }

.reveal .u-five-sixths {
  width: 83.33333%; }

.reveal .u-one-eighth {
  width: 12.5%; }

.reveal .u-two-eighths {
  width: 25%; }

.reveal .u-three-eighths {
  width: 37.5%; }

.reveal .u-four-eighths {
  width: 50%; }

.reveal .u-five-eighths {
  width: 62.5%; }

.reveal .u-six-eighths {
  width: 75%; }

.reveal .u-seven-eighths {
  width: 87.5%; }

.reveal .u-one-tenth {
  width: 10%; }

.reveal .u-two-tenths {
  width: 20%; }

.reveal .u-three-tenths {
  width: 30%; }

.reveal .u-four-tenths {
  width: 40%; }

.reveal .u-five-tenths {
  width: 50%; }

.reveal .u-six-tenths {
  width: 60%; }

.reveal .u-seven-tenths {
  width: 70%; }

.reveal .u-eight-tenths {
  width: 80%; }

.reveal .u-nine-tenths {
  width: 90%; }

.reveal .u-one-twelfth {
  width: 8.33333%; }

.reveal .u-two-twelfths {
  width: 16.66667%; }

.reveal .u-three-twelfths {
  width: 25%; }

.reveal .u-four-twelfths {
  width: 33.33333%; }

.reveal .u-five-twelfths {
  width: 41.66667%; }

.reveal .u-six-twelfths {
  width: 50%; }

.reveal .u-seven-twelfths {
  width: 58.33333%; }

.reveal .u-eight-twelfths {
  width: 66.66667%; }

.reveal .u-nine-twelfths {
  width: 75%; }

.reveal .u-ten-twelfths {
  width: 83.33333%; }

.reveal .u-eleven-twelfths {
  width: 91.66667%; }

@media (min-width: 40.0625em) {
  .reveal .u-one-whole-from-lap {
    width: 100%; }
  .reveal .u-one-half-from-lap {
    width: 50%; }
  .reveal .u-one-third-from-lap {
    width: 33.33333%; }
  .reveal .u-two-thirds-from-lap {
    width: 66.66667%; }
  .reveal .u-one-quarter-from-lap {
    width: 25%; }
  .reveal .u-two-quarters-from-lap {
    width: 50%; }
  .reveal .u-three-quarters-from-lap {
    width: 75%; }
  .reveal .u-one-fifth-from-lap {
    width: 20%; }
  .reveal .u-two-fifths-from-lap {
    width: 40%; }
  .reveal .u-three-fifths-from-lap {
    width: 60%; }
  .reveal .u-four-fifths-from-lap {
    width: 80%; }
  .reveal .u-one-sixth-from-lap {
    width: 16.66667%; }
  .reveal .u-two-sixths-from-lap {
    width: 33.33333%; }
  .reveal .u-three-sixths-from-lap {
    width: 50%; }
  .reveal .u-four-sixths-from-lap {
    width: 66.66667%; }
  .reveal .u-five-sixths-from-lap {
    width: 83.33333%; }
  .reveal .u-one-eighth-from-lap {
    width: 12.5%; }
  .reveal .u-two-eighths-from-lap {
    width: 25%; }
  .reveal .u-three-eighths-from-lap {
    width: 37.5%; }
  .reveal .u-four-eighths-from-lap {
    width: 50%; }
  .reveal .u-five-eighths-from-lap {
    width: 62.5%; }
  .reveal .u-six-eighths-from-lap {
    width: 75%; }
  .reveal .u-seven-eighths-from-lap {
    width: 87.5%; }
  .reveal .u-one-tenth-from-lap {
    width: 10%; }
  .reveal .u-two-tenths-from-lap {
    width: 20%; }
  .reveal .u-three-tenths-from-lap {
    width: 30%; }
  .reveal .u-four-tenths-from-lap {
    width: 40%; }
  .reveal .u-five-tenths-from-lap {
    width: 50%; }
  .reveal .u-six-tenths-from-lap {
    width: 60%; }
  .reveal .u-seven-tenths-from-lap {
    width: 70%; }
  .reveal .u-eight-tenths-from-lap {
    width: 80%; }
  .reveal .u-nine-tenths-from-lap {
    width: 90%; }
  .reveal .u-one-twelfth-from-lap {
    width: 8.33333%; }
  .reveal .u-two-twelfths-from-lap {
    width: 16.66667%; }
  .reveal .u-three-twelfths-from-lap {
    width: 25%; }
  .reveal .u-four-twelfths-from-lap {
    width: 33.33333%; }
  .reveal .u-five-twelfths-from-lap {
    width: 41.66667%; }
  .reveal .u-six-twelfths-from-lap {
    width: 50%; }
  .reveal .u-seven-twelfths-from-lap {
    width: 58.33333%; }
  .reveal .u-eight-twelfths-from-lap {
    width: 66.66667%; }
  .reveal .u-nine-twelfths-from-lap {
    width: 75%; }
  .reveal .u-ten-twelfths-from-lap {
    width: 83.33333%; }
  .reveal .u-eleven-twelfths-from-lap {
    width: 91.66667%; } }
